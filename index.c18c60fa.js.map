{"mappings":"AAAA,MAAMA,EAAgBC,SAASC,cAAc,QACvCC,EAAWF,SAASC,cAAc,cAExCF,EAAcI,iBAAiB,SAASC,UACtC,KAqBF,SAA6BC,GAC3B,MAAMC,EAASD,EACZE,KACCC,GAAQ,8CACYA,EAAKC,sCACJD,EAAKE,yCACHF,EAAKG,QAAQF,0BAGrCG,KAAK,IACRV,EAASW,UAAYP,C,CA7BnBQ,OAMJV,iBACE,MAAMW,EAAU,uCAGVC,EAFU,CAAC,EAAG,EAAG,EAAG,EAAG,GAEGT,KAAIH,MAAMa,UACjBC,MAAM,GAAGH,WAAiBE,MACjCE,SAIlB,aADoBC,QAAQC,IAAIL,E,CAhBVM,G,CAEpB,MAAOC,GACPC,QAAQC,IAAIF,EAAMG,Q","sources":["src/js/index.js"],"sourcesContent":["const fetchUsersBtn = document.querySelector('.btn');\nconst userList = document.querySelector('.user-list');\n\nfetchUsersBtn.addEventListener('click', async () => {\n  try {\n    const users = await fetchUsers();\n    renderUserListItems(users);\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nasync function fetchUsers() {\n  const baseUrl = 'https://jsonplaceholder.typicode.com';\n  const userIds = [1, 2, 3, 4, 5];\n\n  const arrayOfPromises = userIds.map(async userId => {\n    const response = await fetch(`${baseUrl}/users/${userId}`);\n    return response.json();\n  });\n\n  const users = await Promise.all(arrayOfPromises);\n  return users;\n}\n\nfunction renderUserListItems(users) {\n  const markup = users\n    .map(\n      user => `<li class=\"item\">\n        <p><b>Name</b>: ${user.name}</p>\n        <p><b>Email</b>: ${user.email}</p>\n        <p><b>Company</b>: ${user.company.name}</p>\n      </li>`\n    )\n    .join('');\n  userList.innerHTML = markup;\n}\n"],"names":["$85a5f86b715fe7db$var$fetchUsersBtn","document","querySelector","$85a5f86b715fe7db$var$userList","addEventListener","async","users","markup","map","user","name","email","company","join","innerHTML","$85a5f86b715fe7db$var$renderUserListItems","baseUrl","arrayOfPromises","userId","fetch","json","Promise","all","$85a5f86b715fe7db$var$fetchUsers","error","console","log","message"],"version":3,"file":"index.c18c60fa.js.map"}